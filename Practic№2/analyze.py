from scapy.all import rdpcap, IP
from collections import Counter

# –ß—Ç–µ–Ω–∏–µ –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
packets = rdpcap("packets.pcap")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
protocols = Counter()

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –Ω–æ–º–µ—Ä–æ–≤ IP-–ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –∏ –∏—Ö –∏–º—ë–Ω
proto_names = {
    1: "ICMP",
    2: "IGMP",
    6: "TCP",
    17: "UDP",
    41: "IPv6",
    47: "GRE",
    50: "ESP",
    51: "AH",
    58: "ICMPv6",
    89: "OSPF"
}

# –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ IP-–ø–∞–∫–µ—Ç–∞
for pkt in packets:
    if pkt.haslayer(IP):
        proto_num = pkt[IP].proto
        protocols[proto_num] += 1

print("=== üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ IP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º ===")
total = sum(protocols.values())
print(f"–í—Å–µ–≥–æ IP-–ø–∞–∫–µ—Ç–æ–≤: {total}\n")

for proto, count in protocols.items():
    name = proto_names.get(proto, f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª (#{proto})")
    percent = (count / total) * 100
    print(f"{name:<20} ‚Äî {count:>4} –ø–∞–∫–µ—Ç–æ–≤ ({percent:.1f}%)")
 
